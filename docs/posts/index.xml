<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on fukajun&#39;s blog</title>
    <link>https://blog.fukajun.com/posts/</link>
    <description>Recent content in Posts on fukajun&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Fri, 15 Jul 2022 14:46:40 +0900</lastBuildDate><atom:link href="https://blog.fukajun.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>BigQueryのパーティションについて調べてみた</title>
      <link>https://blog.fukajun.com/posts/bigquery-partition/</link>
      <pubDate>Fri, 15 Jul 2022 14:46:40 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/bigquery-partition/</guid>
      <description>はじめに BigQueryを使うにあたって、クエリー料金を安く抑えるのに重要と思われる パーティション分割について調べたときのメモ パーティション分割とは? テーブルをパーティションキーに指定した値でパーティションとして分割することができる BigQuery初心者を脱出したい２（パーティシ</description>
    </item>
    
    <item>
      <title>MySQLレプリケーションストップ</title>
      <link>https://blog.fukajun.com/posts/mysql-replication-stop/</link>
      <pubDate>Mon, 11 Jul 2022 03:50:43 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/mysql-replication-stop/</guid>
      <description>はじめに レプリケーションのエラーを探す RDSの場合は、対象DBインスタンスの「ログとイベント」タブから見ることができる。 show slave status;する error logを確認する サイズが大きい場合は、必要な情報がそのなかに埋もれてしまっている場合もあるので grepなどを適宜利用して絞り込みを行う テ</description>
    </item>
    
    <item>
      <title>Rustチマチマノート</title>
      <link>https://blog.fukajun.com/posts/try-rust-note/</link>
      <pubDate>Wed, 18 May 2022 03:50:43 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/try-rust-note/</guid>
      <description>Rustをチマチマやるノート strとString 関数で文字列を返したいとき、strだとスコープを抜けるので、Stringだと返却できるよって書いてあって。よくわからんかったけど動いた rustの関数で値を返す まったくもってこの2つの違いがわからないので調べたい Rustは文字列を表す</description>
    </item>
    
    <item>
      <title>Railsでrspecのシンプルな例</title>
      <link>https://blog.fukajun.com/posts/rails-rspec-simple/</link>
      <pubDate>Tue, 19 Apr 2022 14:19:27 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/rails-rspec-simple/</guid>
      <description>はじめに Railsでspecを書くときにこういう風に書いてという場合に、シンプルな例が欲しかったので書いてみました。 こんな感じ itのなかはできるだけテストの対象のことだけを書く contextで条件分けをする contextのなかは、その文脈で差分が分かるようにする =&amp;gt; let(:name)... の部分 対象のm</description>
    </item>
    
    <item>
      <title>設計・進め方を考えるとき</title>
      <link>https://blog.fukajun.com/posts/when-thinking-of-a-solution/</link>
      <pubDate>Sat, 04 Dec 2021 00:10:00 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/when-thinking-of-a-solution/</guid>
      <description>はじめに 設計や、手順を考えるときに気をつけたいこと気をつけていることについて 簡単に書いてみる。 気をつけたいことはなにか？ パッと思いつく範囲であげてみる 本当に必要なのかを考える 何よりも問題を解決する 問題を正しく理解する 複数の案を出す、選定する 少し先の未来について考える 以下、それぞれ</description>
    </item>
    
    <item>
      <title>React Hooksでstateに関数(function)を設定する</title>
      <link>https://blog.fukajun.com/posts/react-use-state-set-function-to-state/</link>
      <pubDate>Wed, 01 Dec 2021 12:27:32 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/react-use-state-set-function-to-state/</guid>
      <description>はじめに react hooksを使っているときに、関数を状態として持たせたいというのがあった。 なかなかない状況ではあるが、メモしておく。 stateに関数(function)を設定するには？ setStateには、引数として渡した関数を評価し、結果をstateに割り当てるという動作もある。 なの</description>
    </item>
    
    <item>
      <title>Railsとelasticache(memcached)について</title>
      <link>https://blog.fukajun.com/posts/rails-elasticache-memcached/</link>
      <pubDate>Fri, 29 Oct 2021 12:27:32 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/rails-elasticache-memcached/</guid>
      <description>はじめに Railsで、elasticache(memcached)を使ったときに調べたことについて書いてみた Railsでelasticacheを使うには？ dalli-elasticacheがある。4年位更新されてないけど、依存しているgemがdalliだけで、elasticach</description>
    </item>
    
    <item>
      <title>Makefileで作業タスクを実行する</title>
      <link>https://blog.fukajun.com/posts/make-makefile/</link>
      <pubDate>Mon, 25 Oct 2021 12:27:32 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/make-makefile/</guid>
      <description>はじめに 最近、仕事で複数のレポジトリを扱うことが多く、すこし時間がたってから再び作業を行うことも多い そういうときに、Makefileを使ってみたら便利だったので、簡単にその使い方について紹介する Makefileについて ビルド手順を書くもの あるファイル、拡張子を作るための手順を書い</description>
    </item>
    
    <item>
      <title>Shell Commands Cheet Sheet</title>
      <link>https://blog.fukajun.com/posts/shell-commands-cheet-sheet/</link>
      <pubDate>Mon, 27 Sep 2021 11:20:19 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/shell-commands-cheet-sheet/</guid>
      <description>du 普通にカレントディレクトリのファイル・ディレクトリのサイズを個々に調べる $ du -hs * ↑のやり方では、隠しファイルを含めてサイズを表示することができない。 隠しファイルも含めて合計サイズを調べたい場合は、下記のようにする。 $ du -hs $(ls -A) find 2日以上前に変更のあったディレクトリ -mtime : +2 2日以前の</description>
    </item>
    
    <item>
      <title>envoyでrequest headerを変更する</title>
      <link>https://blog.fukajun.com/posts/change-request-header-in-envoy/</link>
      <pubDate>Sun, 26 Sep 2021 02:18:58 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/change-request-header-in-envoy/</guid>
      <description>概要 envoyを経由してhttpリクエストを、APPサーバーに送るときのヘッダー情報を追加/変更をしてみる やったこと route_config.request_headers_to_add を利用する。headerに key value を指定する。 appendについては、オプションだがデフォルトだと値の追加になり、下記の例で、append: true だと httpの値が来た場</description>
    </item>
    
    <item>
      <title>gemのインストールに失敗したときにやること</title>
      <link>https://blog.fukajun.com/posts/install-native-extension-gem/</link>
      <pubDate>Fri, 03 Sep 2021 01:31:55 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/install-native-extension-gem/</guid>
      <description>概要 gemのインストールで失敗のほとんどは、native extensionありのgemじゃないかと思う 今回は mysql2 gem のインストール時のハマったときのことを参考に失敗したときにやることについて書いてみた ちなみに、このままやればできるという内容ではないです インストールできたコマンド まずは</description>
    </item>
    
    <item>
      <title>git logで変更の種別(変更/削除/追加)を表示する</title>
      <link>https://blog.fukajun.com/posts/git-log-name-status/</link>
      <pubDate>Sun, 15 Aug 2021 14:19:27 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/git-log-name-status/</guid>
      <description>概要 ファイル生成コマンドが行った変更を取り消したい。 そのために、gitの履歴で git status ライクにファイル毎の変更種別を方法を調べた。 具体的には、A:追加 M:変更 D:削除のように表示してほしい。 やり方 git log --name-status を使う。 同様に git show --name-status &amp;lt;commit hash&amp;gt; で特定の変更のみをみることもできる 表示例 commit b2931fae2dc118ad34d19fe28f2bb0f6ef2244a6 Author: fukajun &amp;lt;xxxxxx&amp;gt; Date: Sat Sep 22</description>
    </item>
    
    <item>
      <title>CloudWatch Metrics で変化量をアラームにする</title>
      <link>https://blog.fukajun.com/posts/cloud-watch-metircs-alarm-use-diff/</link>
      <pubDate>Thu, 05 Aug 2021 21:11:47 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/cloud-watch-metircs-alarm-use-diff/</guid>
      <description>概要 cloudwatch metricsで、常に増加するような値をアラームにするやり方について やり方 使用したいメトリクスを選択し、数式の追加から DIFF を選択すると 式1 DIFF(METRICS()) が追加される。これを利用すると直前と現在の値の差を出せるようになる。 ただしこれをアラームにしようとすると アラームの式では、正確に 1 つの時</description>
    </item>
    
    <item>
      <title>Railsでハマルやつ</title>
      <link>https://blog.fukajun.com/posts/rails-development-problems/</link>
      <pubDate>Mon, 19 Jul 2021 03:50:43 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/rails-development-problems/</guid>
      <description>&amp;amp;nbsp;を使いたい 何をしたいか？ Railsでhtmlの特殊文字である&amp;amp;nbspを使いたい。 対策 String#html_safe もしくは、raw ヘルパーを利用する。 &amp;quot;&amp;amp;nbsp;&amp;quot;.html_safe raw(&amp;quot;&amp;amp;nbsp;&amp;quot;) secret_key_base設定漏れで謎のエラー エラー An unhandled lowlevel error occurred. The application logs may have details. 対応 secret_key_base が設定されていないことが原因、ちゃんと値</description>
    </item>
    
    <item>
      <title>Try envoy(HealthChecks)</title>
      <link>https://blog.fukajun.com/posts/try-envoy-second/</link>
      <pubDate>Tue, 06 Jul 2021 01:43:21 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/try-envoy-second/</guid>
      <description>try envoy Envoyを触っていくにあたって、公式のチュートリアルtry-envoyをやってみたきのメモ 今回は「 Detecting Unavailable Services Using health checks and outlier detection」の内容について Detecting Unavailable Services Using health checks and outlier detection 各接続先へのヘルスチェックを行う方法について説明してくれている。 clustersにhealth_checks</description>
    </item>
    
    <item>
      <title>Try envoy(GettingStarted/NGINX/HAProxy)</title>
      <link>https://blog.fukajun.com/posts/try-envoy-first/</link>
      <pubDate>Wed, 30 Jun 2021 10:52:04 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/try-envoy-first/</guid>
      <description>try envoyをやってみた 公式にものっているチュートリアルtry envoyをやってみた https://www.katacoda.com/envoyproxy チュートリアル内の設定ファイルが1.18あたりだと動かないので書き換えてみた envoyについて サービスディスカバリ Istioの内部で動いているやつ プロキシーのすごいやつ envoyのコア機能につい</description>
    </item>
    
    <item>
      <title>Rails on Lambda</title>
      <link>https://blog.fukajun.com/posts/rails-on-lambda/</link>
      <pubDate>Tue, 22 Jun 2021 22:48:02 +0900</pubDate>
      
      <guid>https://blog.fukajun.com/posts/rails-on-lambda/</guid>
      <description>Rails on Lambdaとは？ AWS Lambda上でRailsが動くぽいので試してみた。 過去にaws lambda上で動くrailsライクなフレームワークjetsの存在は知っていたが、Railsがそのまま動くのは知らなかった。 lambdaのコンテナイメージのサポートが関係してそう。 lamby Lamby</description>
    </item>
    
  </channel>
</rss>
